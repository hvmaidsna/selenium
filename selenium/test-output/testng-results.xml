<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="60558" started-at="2020-05-20T07:32:12Z" finished-at="2020-05-20T07:33:12Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="60558" started-at="2020-05-20T07:32:12Z" finished-at="2020-05-20T07:33:12Z">
      <class name="maiho.selenium.iFrameTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:maiho.selenium.iFrameTest@68c4039c]" name="beforeTest" is-config="true" duration-ms="6221" started-at="2020-05-20T07:32:12Z" finished-at="2020-05-20T07:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="testIFrame()[pri:0, instance:maiho.selenium.iFrameTest@68c4039c]" name="testIFrame" duration-ms="22599" started-at="2020-05-20T07:32:18Z" finished-at="2020-05-20T07:32:41Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot determine loading status
from no such window
  (Session info: chrome=81.0.4044.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MBA0298P.local', ip: 'fe80:0:0:0:141e:7a1:b6f2:5f42%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 81.0.4044.138 (8c6c7ba89cc9..., userDataDir: /var/folders/j7/qzwdfpg52cz...}, goog:chromeOptions: {debuggerAddress: localhost:51577}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 63c9bc86d405234061da5893ce9b63ae]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot determine loading status
from no such window
  (Session info: chrome=81.0.4044.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'MBA0298P.local', ip: 'fe80:0:0:0:141e:7a1:b6f2:5f42%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.4', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 81.0.4044.138, chrome: {chromedriverVersion: 81.0.4044.138 (8c6c7ba89cc9..., userDataDir: /var/folders/j7/qzwdfpg52cz...}, goog:chromeOptions: {debuggerAddress: localhost:51577}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 63c9bc86d405234061da5893ce9b63ae
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609)
at org.openqa.selenium.remote.RemoteWebDriver.getCurrentUrl(RemoteWebDriver.java:287)
at maiho.selenium.iFrameTest.testIFrame(iFrameTest.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIFrame -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:maiho.selenium.iFrameTest@68c4039c]" name="afterTest" is-config="true" duration-ms="492" started-at="2020-05-20T07:32:41Z" finished-at="2020-05-20T07:32:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- maiho.selenium.iFrameTest -->
      <class name="maiho.selenium.guru99LoginTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:maiho.selenium.guru99LoginTest@3532ec19]" name="beforeTest" is-config="true" duration-ms="6479" started-at="2020-05-20T07:32:12Z" finished-at="2020-05-20T07:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="resetTest()[pri:0, instance:maiho.selenium.guru99LoginTest@3532ec19]" name="resetTest" duration-ms="24191" started-at="2020-05-20T07:32:18Z" finished-at="2020-05-20T07:32:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetTest -->
        <test-method status="PASS" signature="loginTest()[pri:1, instance:maiho.selenium.guru99LoginTest@3532ec19]" name="loginTest" duration-ms="10136" started-at="2020-05-20T07:33:02Z" finished-at="2020-05-20T07:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method status="PASS" signature="verifyMangeID()[pri:2, instance:maiho.selenium.guru99LoginTest@3532ec19]" name="verifyMangeID" duration-ms="96" started-at="2020-05-20T07:33:12Z" finished-at="2020-05-20T07:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMangeID -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:maiho.selenium.guru99LoginTest@3532ec19]" name="afterTest" is-config="true" duration-ms="133" started-at="2020-05-20T07:33:12Z" finished-at="2020-05-20T07:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- maiho.selenium.guru99LoginTest -->
      <class name="maiho.selenium.DynamicTableTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:maiho.selenium.DynamicTableTest@26653222]" name="beforeTest" is-config="true" duration-ms="6244" started-at="2020-05-20T07:32:12Z" finished-at="2020-05-20T07:32:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="testEasy()[pri:0, instance:maiho.selenium.DynamicTableTest@26653222]" name="testEasy" duration-ms="43905" started-at="2020-05-20T07:32:18Z" finished-at="2020-05-20T07:33:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEasy -->
        <test-method status="PASS" signature="maxValueCurrentPrice()[pri:1, instance:maiho.selenium.DynamicTableTest@26653222]" name="maxValueCurrentPrice" duration-ms="5313" started-at="2020-05-20T07:33:02Z" finished-at="2020-05-20T07:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- maxValueCurrentPrice -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:maiho.selenium.DynamicTableTest@26653222]" name="afterTest" is-config="true" duration-ms="213" started-at="2020-05-20T07:33:07Z" finished-at="2020-05-20T07:33:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- maiho.selenium.DynamicTableTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
